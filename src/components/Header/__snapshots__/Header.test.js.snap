// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Header should match snapshot when user is logged in 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Unknown
    loggedIn={true}
    setLogin={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Link
          replace={false}
          to={
                    Object {
                              "pathname": "/",
                            }
          }
>
          <h1
                    className="app-title"
          >
                    Puzzle Swap
          </h1>
</Link>,
        <button
          onClick={[Function]}
>
          Sign out
</button>,
      ],
      "className": "App-header",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <h1
            className="app-title"
>
            Puzzle Swap
</h1>,
          "replace": false,
          "to": Object {
            "pathname": "/",
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Puzzle Swap",
            "className": "app-title",
          },
          "ref": null,
          "rendered": "Puzzle Swap",
          "type": "h1",
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Sign out",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": "Sign out",
        "type": "button",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Link
            replace={false}
            to={
                        Object {
                                    "pathname": "/",
                                  }
            }
>
            <h1
                        className="app-title"
            >
                        Puzzle Swap
            </h1>
</Link>,
          <button
            onClick={[Function]}
>
            Sign out
</button>,
        ],
        "className": "App-header",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <h1
              className="app-title"
>
              Puzzle Swap
</h1>,
            "replace": false,
            "to": Object {
              "pathname": "/",
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Puzzle Swap",
              "className": "app-title",
            },
            "ref": null,
            "rendered": "Puzzle Swap",
            "type": "h1",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Sign out",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": "Sign out",
          "type": "button",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`Header should match snapshot when user is not logged in 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Unknown
    loggedIn={false}
    setLogin={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Link
          replace={false}
          to={
                    Object {
                              "pathname": "/",
                            }
          }
>
          <h1
                    className="app-title"
          >
                    Puzzle Swap
          </h1>
</Link>,
        <div
          className="header-right"
>
          <div
                    className="login-container"
          >
                    <Link
                              replace={false}
                              to={
                                        Object {
                                                  "pathname": "/login",
                                                }
                              }
                    >
                              <button
                                        className="login"
                              >
                                        Login
                              </button>
                    </Link>
                    <Link
                              replace={false}
                              to={
                                        Object {
                                                  "pathname": "/sign-up",
                                                }
                              }
                    >
                              <button
                                        className="login"
                              >
                                        Sign up
                              </button>
                    </Link>
          </div>
          <Link
                    replace={false}
                    to={
                              Object {
                                        "pathname": "/messages",
                                      }
                    }
          >
                    <button
                              className="messages"
                    >
                              Messages
                    </button>
          </Link>
</div>,
      ],
      "className": "App-header",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <h1
            className="app-title"
>
            Puzzle Swap
</h1>,
          "replace": false,
          "to": Object {
            "pathname": "/",
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Puzzle Swap",
            "className": "app-title",
          },
          "ref": null,
          "rendered": "Puzzle Swap",
          "type": "h1",
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="login-container"
>
              <Link
                            replace={false}
                            to={
                                          Object {
                                                        "pathname": "/login",
                                                      }
                            }
              >
                            <button
                                          className="login"
                            >
                                          Login
                            </button>
              </Link>
              <Link
                            replace={false}
                            to={
                                          Object {
                                                        "pathname": "/sign-up",
                                                      }
                            }
              >
                            <button
                                          className="login"
                            >
                                          Sign up
                            </button>
              </Link>
</div>,
            <Link
              replace={false}
              to={
                            Object {
                                          "pathname": "/messages",
                                        }
              }
>
              <button
                            className="messages"
              >
                            Messages
              </button>
</Link>,
          ],
          "className": "header-right",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <Link
                  replace={false}
                  to={
                                    Object {
                                                      "pathname": "/login",
                                                    }
                  }
>
                  <button
                                    className="login"
                  >
                                    Login
                  </button>
</Link>,
                <Link
                  replace={false}
                  to={
                                    Object {
                                                      "pathname": "/sign-up",
                                                    }
                  }
>
                  <button
                                    className="login"
                  >
                                    Sign up
                  </button>
</Link>,
              ],
              "className": "login-container",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <button
                    className="login"
>
                    Login
</button>,
                  "replace": false,
                  "to": Object {
                    "pathname": "/login",
                  },
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Login",
                    "className": "login",
                  },
                  "ref": null,
                  "rendered": "Login",
                  "type": "button",
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <button
                    className="login"
>
                    Sign up
</button>,
                  "replace": false,
                  "to": Object {
                    "pathname": "/sign-up",
                  },
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Sign up",
                    "className": "login",
                  },
                  "ref": null,
                  "rendered": "Sign up",
                  "type": "button",
                },
                "type": [Function],
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <button
                className="messages"
>
                Messages
</button>,
              "replace": false,
              "to": Object {
                "pathname": "/messages",
              },
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Messages",
                "className": "messages",
              },
              "ref": null,
              "rendered": "Messages",
              "type": "button",
            },
            "type": [Function],
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Link
            replace={false}
            to={
                        Object {
                                    "pathname": "/",
                                  }
            }
>
            <h1
                        className="app-title"
            >
                        Puzzle Swap
            </h1>
</Link>,
          <div
            className="header-right"
>
            <div
                        className="login-container"
            >
                        <Link
                                    replace={false}
                                    to={
                                                Object {
                                                            "pathname": "/login",
                                                          }
                                    }
                        >
                                    <button
                                                className="login"
                                    >
                                                Login
                                    </button>
                        </Link>
                        <Link
                                    replace={false}
                                    to={
                                                Object {
                                                            "pathname": "/sign-up",
                                                          }
                                    }
                        >
                                    <button
                                                className="login"
                                    >
                                                Sign up
                                    </button>
                        </Link>
            </div>
            <Link
                        replace={false}
                        to={
                                    Object {
                                                "pathname": "/messages",
                                              }
                        }
            >
                        <button
                                    className="messages"
                        >
                                    Messages
                        </button>
            </Link>
</div>,
        ],
        "className": "App-header",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <h1
              className="app-title"
>
              Puzzle Swap
</h1>,
            "replace": false,
            "to": Object {
              "pathname": "/",
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Puzzle Swap",
              "className": "app-title",
            },
            "ref": null,
            "rendered": "Puzzle Swap",
            "type": "h1",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="login-container"
>
                <Link
                                replace={false}
                                to={
                                                Object {
                                                                "pathname": "/login",
                                                              }
                                }
                >
                                <button
                                                className="login"
                                >
                                                Login
                                </button>
                </Link>
                <Link
                                replace={false}
                                to={
                                                Object {
                                                                "pathname": "/sign-up",
                                                              }
                                }
                >
                                <button
                                                className="login"
                                >
                                                Sign up
                                </button>
                </Link>
</div>,
              <Link
                replace={false}
                to={
                                Object {
                                                "pathname": "/messages",
                                              }
                }
>
                <button
                                className="messages"
                >
                                Messages
                </button>
</Link>,
            ],
            "className": "header-right",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <Link
                    replace={false}
                    to={
                                        Object {
                                                            "pathname": "/login",
                                                          }
                    }
>
                    <button
                                        className="login"
                    >
                                        Login
                    </button>
</Link>,
                  <Link
                    replace={false}
                    to={
                                        Object {
                                                            "pathname": "/sign-up",
                                                          }
                    }
>
                    <button
                                        className="login"
                    >
                                        Sign up
                    </button>
</Link>,
                ],
                "className": "login-container",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <button
                      className="login"
>
                      Login
</button>,
                    "replace": false,
                    "to": Object {
                      "pathname": "/login",
                    },
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Login",
                      "className": "login",
                    },
                    "ref": null,
                    "rendered": "Login",
                    "type": "button",
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <button
                      className="login"
>
                      Sign up
</button>,
                    "replace": false,
                    "to": Object {
                      "pathname": "/sign-up",
                    },
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Sign up",
                      "className": "login",
                    },
                    "ref": null,
                    "rendered": "Sign up",
                    "type": "button",
                  },
                  "type": [Function],
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <button
                  className="messages"
>
                  Messages
</button>,
                "replace": false,
                "to": Object {
                  "pathname": "/messages",
                },
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Messages",
                  "className": "messages",
                },
                "ref": null,
                "rendered": "Messages",
                "type": "button",
              },
              "type": [Function],
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
