// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Main matches snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Main
    addLocation={[Function]}
    location=""
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Link
          replace={false}
          to={
                    Object {
                              "pathname": "/post-puzzle-form",
                            }
          }
>
          <button
                    className="puzzle-post"
          >
                    Post a Puzzle
          </button>
</Link>,
        <p>
          Viewing 
          <select
                    id="puzzle-filter"
                    name="puzzleFilter"
                    onChange={[Function]}
          >
                    <option
                              value="all"
                    >
                              all
                    </option>
                    <option
                              value="300-750"
                    >
                              300-750
                    </option>
                    <option
                              value="1000"
                    >
                              1000
                    </option>
                    <option
                              value="1100 or more"
                    >
                              1100 or more
                    </option>
          </select>
           piece puzzles posted in 
          
</p>,
        <PuzzleContainer />,
      ],
      "className": "main",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <button
            className="puzzle-post"
>
            Post a Puzzle
</button>,
          "replace": false,
          "to": Object {
            "pathname": "/post-puzzle-form",
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Post a Puzzle",
            "className": "puzzle-post",
          },
          "ref": null,
          "rendered": "Post a Puzzle",
          "type": "button",
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            "Viewing ",
            <select
              id="puzzle-filter"
              name="puzzleFilter"
              onChange={[Function]}
>
              <option
                            value="all"
              >
                            all
              </option>
              <option
                            value="300-750"
              >
                            300-750
              </option>
              <option
                            value="1000"
              >
                            1000
              </option>
              <option
                            value="1100 or more"
              >
                            1100 or more
              </option>
</select>,
            " piece puzzles posted in ",
            "",
          ],
        },
        "ref": null,
        "rendered": Array [
          "Viewing ",
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <option
                  value="all"
>
                  all
</option>,
                <option
                  value="300-750"
>
                  300-750
</option>,
                <option
                  value="1000"
>
                  1000
</option>,
                <option
                  value="1100 or more"
>
                  1100 or more
</option>,
              ],
              "id": "puzzle-filter",
              "name": "puzzleFilter",
              "onChange": [Function],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "all",
                  "value": "all",
                },
                "ref": null,
                "rendered": "all",
                "type": "option",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "300-750",
                  "value": "300-750",
                },
                "ref": null,
                "rendered": "300-750",
                "type": "option",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "1000",
                  "value": "1000",
                },
                "ref": null,
                "rendered": "1000",
                "type": "option",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "1100 or more",
                  "value": "1100 or more",
                },
                "ref": null,
                "rendered": "1100 or more",
                "type": "option",
              },
            ],
            "type": "select",
          },
          " piece puzzles posted in ",
          "",
        ],
        "type": "p",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Link
            replace={false}
            to={
                        Object {
                                    "pathname": "/post-puzzle-form",
                                  }
            }
>
            <button
                        className="puzzle-post"
            >
                        Post a Puzzle
            </button>
</Link>,
          <p>
            Viewing 
            <select
                        id="puzzle-filter"
                        name="puzzleFilter"
                        onChange={[Function]}
            >
                        <option
                                    value="all"
                        >
                                    all
                        </option>
                        <option
                                    value="300-750"
                        >
                                    300-750
                        </option>
                        <option
                                    value="1000"
                        >
                                    1000
                        </option>
                        <option
                                    value="1100 or more"
                        >
                                    1100 or more
                        </option>
            </select>
             piece puzzles posted in 
            
</p>,
          <PuzzleContainer />,
        ],
        "className": "main",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <button
              className="puzzle-post"
>
              Post a Puzzle
</button>,
            "replace": false,
            "to": Object {
              "pathname": "/post-puzzle-form",
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Post a Puzzle",
              "className": "puzzle-post",
            },
            "ref": null,
            "rendered": "Post a Puzzle",
            "type": "button",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Viewing ",
              <select
                id="puzzle-filter"
                name="puzzleFilter"
                onChange={[Function]}
>
                <option
                                value="all"
                >
                                all
                </option>
                <option
                                value="300-750"
                >
                                300-750
                </option>
                <option
                                value="1000"
                >
                                1000
                </option>
                <option
                                value="1100 or more"
                >
                                1100 or more
                </option>
</select>,
              " piece puzzles posted in ",
              "",
            ],
          },
          "ref": null,
          "rendered": Array [
            "Viewing ",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <option
                    value="all"
>
                    all
</option>,
                  <option
                    value="300-750"
>
                    300-750
</option>,
                  <option
                    value="1000"
>
                    1000
</option>,
                  <option
                    value="1100 or more"
>
                    1100 or more
</option>,
                ],
                "id": "puzzle-filter",
                "name": "puzzleFilter",
                "onChange": [Function],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "all",
                    "value": "all",
                  },
                  "ref": null,
                  "rendered": "all",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "300-750",
                    "value": "300-750",
                  },
                  "ref": null,
                  "rendered": "300-750",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "1000",
                    "value": "1000",
                  },
                  "ref": null,
                  "rendered": "1000",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "1100 or more",
                    "value": "1100 or more",
                  },
                  "ref": null,
                  "rendered": "1100 or more",
                  "type": "option",
                },
              ],
              "type": "select",
            },
            " piece puzzles posted in ",
            "",
          ],
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
    "disableLifecycleMethods": true,
  },
}
`;
