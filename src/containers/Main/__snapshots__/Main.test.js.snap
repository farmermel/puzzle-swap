// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Main matches snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Main
    addLocation={[Function]}
    hasErrored={[Function]}
    location=""
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <p
          className="view-description"
>
          Viewing puzzles posted in 
          
</p>,
        <div
          className="flex-container"
>
          <withRouter(Connect(PuzzleContainer)) />
</div>,
      ],
      "className": "main",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            "Viewing puzzles posted in ",
            "",
          ],
          "className": "view-description",
        },
        "ref": null,
        "rendered": Array [
          "Viewing puzzles posted in ",
          "",
        ],
        "type": "p",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <withRouter(Connect(PuzzleContainer)) />,
          "className": "flex-container",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <p
            className="view-description"
>
            Viewing puzzles posted in 
            
</p>,
          <div
            className="flex-container"
>
            <withRouter(Connect(PuzzleContainer)) />
</div>,
        ],
        "className": "main",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Viewing puzzles posted in ",
              "",
            ],
            "className": "view-description",
          },
          "ref": null,
          "rendered": Array [
            "Viewing puzzles posted in ",
            "",
          ],
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <withRouter(Connect(PuzzleContainer)) />,
            "className": "flex-container",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
    "disableLifecycleMethods": true,
  },
}
`;
